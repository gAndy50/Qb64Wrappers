'''''''''''''''''''''''''''''''''''''''''
'Raylib Basic                          ''
'Written By Andy P.                    ''
'Icy Viking Games                      ''
'Raylib Ver: 2.5                       ''
'QB Ver: QB 64 1.3                     ''
'Contact Paypal: g_andy <at> live.com  ''
'''''''''''''''''''''''''''''''''''''''''

'Note: Audio functions are wrapped, but not in the raylib.DLL
'Hence why they are commented out

'OUTDATED as of 8-25-255
'PLEASE USE RAYlib42.BI !!!

REM $include: 'raylibflags.bi'

$IF WIN OR LIN THEN
    DECLARE DYNAMIC LIBRARY "raylib"
        'Window Functions
        SUB InitWindow (BYVAL xwidth AS INTEGER, BYVAL height AS INTEGER, title AS STRING)
        FUNCTION WindowShouldClose& ()
        SUB CloseWindow ()
        FUNCTION IsWindowReady& ()
        FUNCTION IsWindowResized& ()
        FUNCTION IsWindowHidden& ()
        SUB ToggleFullscreen ()
        SUB UnhideWindow ()
        SUB HideWindow ()
        SUB SetWindowIcon (BYVAL Image AS _OFFSET)
        SUB SetWindowTitle (title AS STRING)
        SUB SetWindowPosition (BYVAL x AS INTEGER, BYVAL y AS INTEGER)
        SUB SetWindowMonitor (BYVAL monitor AS INTEGER)
        SUB SetWindowMinSize (BYVAL xwidth AS INTEGER, BYVAL height AS INTEGER)
        SUB SetWindowSize (BYVAL xwidth AS INTEGER, BYVAL height AS INTEGER)
        FUNCTION GetWindowHandle& ()
        FUNCTION GetScreenWidth& ()
        FUNCTION GetScreenHeight& ()
        FUNCTION GetMonitorCount& ()
        FUNCTION GetMonitorWidth& ()
        FUNCTION GetMonitorHeight& ()
        FUNCTION GetMonitorPhysicalWidth& (BYVAL monitor AS INTEGER)
        FUNCTION GetMonitorPhysicalHeight& (BYVAL monitor AS INTEGER)
        FUNCTION GetMonitorName& (BYVAL monitor AS INTEGER)
        FUNCTION GetClipboardText& ()
        SUB SetClipboardText (text AS STRING)
        'Cursor Functions
        SUB ShowCursor ()
        SUB HideCursor ()
        FUNCTION IsCursorHidden& ()
        SUB EnableCursor ()
        SUB DisableCursor ()
        'Drawing Functions
        SUB ClearBackground (BYVAL rColor AS _UNSIGNED LONG)
        SUB BeginDrawing ()
        SUB EndDrawing ()
        SUB BeginMode2D (BYVAL Camera2D AS _FLOAT)
        SUB EndMode2D ()
        SUB BeginMode3D (BYVAL Camera3D AS _FLOAT)
        SUB EndMode3D ()
        SUB BeginTextureMode (BYVAL RenderTexture2D AS _OFFSET)
        SUB EndTextureMode ()
        'Screen-Space Functions
        FUNCTION GetMouseRay& (BYVAL x AS _FLOAT, BYVAL y AS _FLOAT, BYVAL Cam AS _OFFSET)
        FUNCTION GetWorldToScreen& (BYVAL Vector3 AS _FLOAT, BYVAL Cam AS _OFFSET)
        FUNCTION GetCameraMatrix (BYVAL Cam AS _OFFSET)
        'Timing Functions
        SUB SetTargetFPS (BYVAL fps AS INTEGER)
        FUNCTION GetFPS& ()
        FUNCTION GetFrameTime& ()
        FUNCTION GetTime& ()
        'Color Functions
        FUNCTION ColorToInt& (BYVAL rColor AS _UNSIGNED LONG)
        FUNCTION ColorNormalize& (BYVAL rColor AS _UNSIGNED LONG)
        FUNCTION ColorToHSV& (BYVAL rColor AS _UNSIGNED LONG)
        FUNCTION ColorFromHSV& (BYVAL Vector3 AS _FLOAT)
        FUNCTION GetColor& (BYVAL hex AS INTEGER)
        FUNCTION Fade& (BYVAL rColor AS _UNSIGNED LONG, BYVAL al AS _FLOAT)
        'Misc Functions
        SUB SetConfigFlags (BYVAL flag AS _UNSIGNED INTEGER)
        SUB SetTraceLogLevel (BYVAL xl AS INTEGER)
        SUB SetTraceLogExit (BYVAL xl AS INTEGER)
        SUB SetTraceLogCallback (BYVAL cb AS _OFFSET)
        SUB TraceLog (BYVAL xl AS INTEGER, text AS STRING)
        SUB TakeScreenshot (file AS STRING)
        FUNCTION GetRandomValue& (BYVAL min AS INTEGER, BYVAL max AS INTEGER)
        'File Management Functions
        FUNCTION FileExists& (filename AS STRING)
        FUNCTION IsFileExtension& (filename AS STRING, ext AS STRING)
        FUNCTION GetExtension& (filename AS STRING)
        FUNCTION GetFileName& (path AS STRING)
        FUNCTION GetFileNameWithoutExt& (path AS STRING)
        FUNCTION GetDirectoryPath& (filename AS STRING)
        FUNCTION GetWorkingDirectory& ()
        FUNCTION GetDirectoryFiles& (path AS STRING, BYVAL count AS INTEGER)
        SUB ClearDirectoryFiles ()
        FUNCTION ChangeDirectory& (xdir AS STRING)
        FUNCTION IsFileDropped& ()
        FUNCTION GetDroppedFiles& (BYVAL count AS INTEGER)
        SUB ClearDroppedFiles ()
        FUNCTION GetFileModTime& (filename AS STRING)
        'Storage Management
        SUB StorageSaveValue (BYVAL xpos AS INTEGER, BYVAL xval AS INTEGER)
        FUNCTION StorageLoadValue& (BYVAL xpos AS INTEGER)
        SUB OpenURL (url AS STRING)
        'Input Key Functions
        FUNCTION IsKeyPressed& (BYVAL k AS INTEGER)
        FUNCTION IsKeyDown& (BYVAL k AS INTEGER)
        FUNCTION IsKeyReleased& (BYVAL k AS INTEGER)
        FUNCTION IsKeyUp& (BYVAL k AS INTEGER)
        FUNCTION GetKeyPressed& ()
        SUB SetExitKey (BYVAL k AS INTEGER)
        'Input Gamepad Functions
        FUNCTION IsGamepadAvailable& (BYVAL pad AS INTEGER)
        FUNCTION IsGamepadName& (BYVAL pad AS INTEGER, title AS STRING)
        FUNCTION GetGamepadName& (BYVAL pad AS INTEGER)
        FUNCTION IsGamepadButtonPressed& (BYVAL pad AS INTEGER, BYVAL btn AS INTEGER)
        FUNCTION IsGamepadButtonDown& (BYVAL pad AS INTEGER, BYVAL btn AS INTEGER)
        FUNCTION IsGamepadButtonReleased& (BYVAL pad AS INTEGER, BYVAL btn AS INTEGER)
        FUNCTION IsGamepadButtonUp& (BYVAL pad AS INTEGER, BYVAL btn AS INTEGER)
        FUNCTION GetGamepadButtonPressed& ()
        FUNCTION GetGamepadAxisCount& (BYVAL pad AS INTEGER)
        FUNCTION GetGamepadAxisMovement (BYVAL pad AS INTEGER, BYVAL axis AS INTEGER)
        'Input Mouse Functions
        FUNCTION IsMouseButtonPressed& (BYVAL btn AS INTEGER)
        FUNCTION IsMouseButtonDown& (BYVAL btn AS INTEGER)
        FUNCTION IsMouseButtonReleased& (BYVAL btn AS INTEGER)
        FUNCTION IsMouseButtonUp& (BYVAL btn AS INTEGER)
        FUNCTION GetMouseX& ()
        FUNCTION GetMouseY& ()
        FUNCTION GetMousePosition& ()
        SUB SetMousePosition (BYVAL x AS INTEGER, BYVAL y AS INTEGER)
        SUB SetMouseOffset (BYVAL x AS INTEGER, BYVAL y AS INTEGER)
        SUB SetMouseScale (BYVAL x AS INTEGER, BYVAL y AS INTEGER)
        FUNCTION GetMouseWheelMove& ()
        'Input Touch Functions
        FUNCTION GetTouchX& ()
        FUNCTION GetTouchY& ()
        FUNCTION GetTouchPosition& (BYVAL idx AS INTEGER)
        'Gesture Functions
        SUB SetGesturesEnabled (BYVAL flag AS _UNSIGNED INTEGER)
        FUNCTION IsGestureDetected& (BYVAL ges AS INTEGER)
        FUNCTION GetGestureDetected& ()
        FUNCTION GetTouchPointsCount& ()
        FUNCTION GetGestureHoldDuration& ()
        FUNCTION GetGestureDragVector& ()
        FUNCTION GetGestureDragAngle& ()
        FUNCTION GetGesturePinchVector& ()
        FUNCTION GetGesturePinchAngle& ()
        'Camera Functions
        SUB SetCameraMode (BYVAL cam AS _OFFSET, BYVAL xmode AS INTEGER)
        SUB UpdateCamera (BYVAL cam AS _OFFSET)
        SUB SetCameraPanControl (BYVAL pan AS INTEGER)
        SUB SetCameraAltControl (BYVAL alt AS INTEGER)
        SUB SetCameraSmoothZoomControl (BYVAL sz AS INTEGER)
        SUB SetCameraMoveControls (BYVAL front AS INTEGER, BYVAL back AS INTEGER, BYVAL right AS INTEGER, BYVAL left AS INTEGER, BYVAL up AS INTEGER, BYVAL down AS INTEGER)
        'Basic Shape Functions
        'Line
        SUB DrawPixel (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawPixelV (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawLine (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL x2 AS INTEGER, BYVAL y2 AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawLineV (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL x2 AS INTEGER, BYVAL y2 AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawLineEx (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL x2 AS INTEGER, BYVAL y2 AS INTEGER, BYVAL thick AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawLineBezier (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL x2 AS INTEGER, BYVAL y2 AS INTEGER, BYVAL thick AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawLineStrip (BYVAL x AS _OFFSET, BYVAL y AS _OFFSET, BYVAL num AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        'Circle
        SUB DrawCircle (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL rad AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCircleSector (BYVAL Vector2 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL start AS INTEGER, BYVAL xend AS INTEGER, BYVAL segs AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCircleSectorLines (BYVAL Vector2 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL start AS INTEGER, BYVAL xend AS INTEGER, BYVAL segs AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCircleGradient (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL rad AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCircleV (BYVAL Vector2 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCircleLines (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL rad AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        'Ring
        SUB DrawRing (BYVAL Vector2 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL rad2 AS _FLOAT, BYVAL start AS INTEGER, BYVAL xend AS INTEGER, BYVAL segs AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawRingLines (BYVAL Vector2 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL rad2 AS _FLOAT, BYVAL start AS INTEGER, BYVAL xend AS INTEGER, BYVAL segs AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        'Rectangle
        SUB DrawRectangle (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL xwidth AS INTEGER, BYVAL height AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawRectangleV (BYVAL Vector2 AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawRectangleRec (BYVAL Rect AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawRectanglePro (BYVAL Rect AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL rot AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawRectangleGradientV (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL rColor AS _UNSIGNED LONG, BYVAL rcColor AS _UNSIGNED LONG)
        SUB DrawRectangleGradientH (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawRectangleGradientEx (BYVAL Rect AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawRectangleLines (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawRectangleLinesEx (BYVAL Rect AS _FLOAT, BYVAL thick AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawRectangleRounded (BYVAL Rect AS _FLOAT, BYVAL round AS _FLOAT, BYVAL segs AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawRectangleRoundedLines (BYVAL Rect AS _FLOAT, BYVAL round AS _FLOAT, BYVAL segs AS INTEGER, BYVAL thick AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        'Triangle
        SUB DrawTriangle (BYVAL Vector2 AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawTriangleLines (BYVAL Vector2 AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawTriangleFan (BYVAL Vector2 AS _FLOAT, BYVAL num AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        'SUB DrawTriangleStrip (BYVAL Vector2 AS _FLOAT, BYVAL count AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        'Poly
        SUB DrawPoly (BYVAL Vector2 AS _FLOAT, BYVAL sides AS INTEGER, BYVAL rad AS _FLOAT, BYVAL rot AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        '
        SUB SetShapesTexture (BYVAL Texture2D AS _OFFSET, BYVAL Rect AS _FLOAT)
        'Collision Detection (Shapes)
        FUNCTION CheckCollisionRecs& (BYVAL Rect AS _FLOAT, BYVAL Rect AS _FLOAT)
        FUNCTION CheckCollisionCircles& (BYVAL Vector2 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL rad2 AS _FLOAT)
        FUNCTION CheckCollisionCircleRec& (BYVAL Vector2 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL Rect AS _FLOAT)
        FUNCTION GetCollisionRec& (BYVAL Rect AS _FLOAT, BYVAL Rect AS _FLOAT)
        FUNCTION CheckCollisionPointRec& (BYVAL Vector2 AS _FLOAT, BYVAL Rect AS _FLOAT)
        FUNCTION CheckCollisionPointCircle& (BYVAL Vector2 AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL rad AS _FLOAT)
        FUNCTION CheckCollisionPointTriangle& (BYVAL Vector2 AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL Vector2 AS _FLOAT)
        'Load 2D Image
        FUNCTION LoadImage& (fileName AS STRING)
        FUNCTION LoadImageEx& (BYVAL rColor AS _UNSIGNED LONG, BYVAL w AS INTEGER, BYVAL h AS INTEGER)
        FUNCTION LoadImagePro& (BYVAL dat AS _OFFSET, BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL mat AS INTEGER)
        FUNCTION LoadImageRaw& (filename AS STRING, BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL mat AS INTEGER, BYVAL size AS INTEGER)
        SUB ExportImage (BYVAL Image AS _OFFSET, fileName AS STRING)
        SUB ExportImageAsCode (BYVAL Image AS _OFFSET, fileName AS STRING)
        FUNCTION LoadTexture& (fileName AS STRING)
        FUNCTION LoadTextureFromImage& (BYVAL Image AS _OFFSET)
        FUNCTION LoadTextureCubemap& (BYVAL Image AS _OFFSET, BYVAL layout AS INTEGER)
        FUNCTION LoadRenderTexture& (BYVAL w AS INTEGER, BYVAL h AS INTEGER)
        SUB UnloadImage (BYVAL Image AS _OFFSET)
        SUB UnloadTexture (BYVAL Texture2D AS _OFFSET)
        SUB UnloadRenderTexture (BYVAL RenderTexture2D AS _OFFSET)
        FUNCTION GetImageData& (BYVAL Image AS _OFFSET)
        FUNCTION GetImageDataNormalized& (BYVAL Image AS _OFFSET)
        FUNCTION GetPixelDataSize& (BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL mat AS INTEGER)
        FUNCTION GetTextureData& (BYVAL Texture2D AS _OFFSET)
        FUNCTION GetScreenData& ()
        SUB UpdateTexture (BYVAL Texture2D AS _OFFSET, BYVAL pix AS _OFFSET)
        'Image Manipulation
        FUNCTION ImageCopy& (BYVAL Image AS _OFFSET)
        SUB ImageToPOT (BYVAL Image AS _OFFSET, BYVAL rColor AS _UNSIGNED LONG)
        SUB ImageFormat (BYVAL Image AS _OFFSET, BYVAL mat AS INTEGER)
        SUB ImageAlphaMask (BYVAL Image AS _OFFSET, BYVAL Image AS _OFFSET)
        SUB ImageAlphaClear (BYVAL Image AS _OFFSET, BYVAL rColor AS _UNSIGNED LONG, BYVAL thres AS _FLOAT)
        SUB ImageAlphaCrop (BYVAL Image AS _OFFSET, BYVAL thres AS _FLOAT)
        SUB ImageAlphaPremultiply (BYVAL Image AS _OFFSET)
        SUB ImageCrop (BYVAL Image AS _OFFSET, BYVAL Rect AS _FLOAT)
        SUB ImageResize (BYVAL Image AS _OFFSET, BYVAL w AS INTEGER, BYVAL h AS INTEGER)
        SUB ImageResizeNN (BYVAL Image AS _OFFSET, BYVAL w AS INTEGER, BYVAL h AS INTEGER)
        SUB ImageResizeCanvas (BYVAL Image AS _OFFSET, BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB ImageMipmaps (BYVAL Image AS _OFFSET)
        SUB ImageDither (BYVAL Image AS _OFFSET, BYVAL r AS INTEGER, BYVAL g AS INTEGER, BYVAL b AS INTEGER, BYVAL a AS INTEGER)
        FUNCTION ImageExtractPalette& (BYVAL Image AS _OFFSET, BYVAL max AS INTEGER, BYVAL count AS INTEGER)
        FUNCTION ImageText& (text AS STRING, BYVAL size AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        FUNCTION ImageTextEx& (BYVAL Font AS _OFFSET, text AS STRING, BYVAL size AS _FLOAT, BYVAL space AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB ImageDraw (BYVAL Image AS _OFFSET, BYVAL Image AS _OFFSET, BYVAL Rect AS _FLOAT, BYVAL Rect AS _FLOAT)
        SUB ImageDrawRectangle (BYVAL Image AS _OFFSET, BYVAL Rect AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB ImageDrawRectangleLines (BYVAL Image AS _OFFSET, BYVAL Rect AS _FLOAT, BYVAL thick AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB ImageDrawText (BYVAL Image AS _OFFSET, BYVAL Vector2 AS _FLOAT, text AS STRING, BYVAL size AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB ImageDrawTextEx (BYVAL Image AS _OFFSET, BYVAL Vector2 AS _FLOAT, BYVAL Font AS _OFFSET, text AS STRING, BYVAL size AS _FLOAT, BYVAL spac AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB ImageFlipVertical (BYVAL Image AS _OFFSET)
        SUB ImageFlipHorizontal (BYVAL Image AS _OFFSET)
        SUB ImageRotateCW (BYVAL Image AS _OFFSET)
        SUB ImageRotateCCW (BYVAL Image AS _OFFSET)
        SUB ImageColorTint (BYVAL Image AS _OFFSET, BYVAL rColor AS _UNSIGNED LONG)
        SUB ImageColorInvert (BYVAL Image AS _OFFSET)
        SUB ImageColorGrayscale (BYVAL Image AS _OFFSET)
        SUB ImageColorContrast (BYVAL Image AS _OFFSET, BYVAL con AS _FLOAT)
        SUB ImageColorBrightness (BYVAL Image AS _OFFSET, BYVAL bright AS INTEGER)
        SUB ImageColorReplace (BYVAL Image AS _OFFSET, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG)
        'Image Generation Function
        FUNCTION GenImageColor& (BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        FUNCTION GenImageGradientV& (BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG)
        FUNCTION GenImageGradientH& (BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG)
        FUNCTION GenImageGradientRadial& (BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL dens AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG)
        FUNCTION GenImageChecked& (BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG)
        FUNCTION GenImageWhiteNoise& (BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL fac AS _FLOAT)
        FUNCTION GenImagePerlinNoise& (BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL scale AS _FLOAT)
        FUNCTION GenImageCellular& (BYVAL w AS INTEGER, BYVAL h AS INTEGER, BYVAL size AS INTEGER)
        'Texture2D Config Function
        SUB GenTextureMipmaps (BYVAL Texture2D AS _OFFSET)
        SUB SetTextureFilter (BYVAL Texture2D AS _OFFSET, BYVAL filter AS INTEGER)
        SUB SetTextureWrap (BYVAL Texture2D AS _OFFSET, BYVAL wrap AS INTEGER)
        'Texture2D Drawing Function
        SUB DrawTexture (BYVAL Texture2D AS _OFFSET, BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL rColor AS _UNSIGNED INTEGER)
        SUB DrawTextureV (BYVAL Texture2D AS _OFFSET, BYVAL Vector2 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawTextureEx (BYVAL Texture2D AS _OFFSET, BYVAL Vector2 AS _FLOAT, BYVAL rot AS _FLOAT, BYVAL sca AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawTextureRec (BYVAL Texture2D AS _OFFSET, BYVAL Rect AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawTextureQuad (BYVAL Texture2D AS _OFFSET, BYVAL Vector2 AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL Rect AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawTexturePro (BYVAL Texture2D AS _OFFSET, BYVAL Rect AS _FLOAT, BYVAL Rect AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL rot AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawTextureNPatch (BYVAL Texture2D AS _OFFSET, BYVAL NPatchInfo AS _OFFSET, BYVAL Rect AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL rot AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        'Font Loading Function
        FUNCTION GetFontDefault& ()
        FUNCTION LoadFont& (filename AS STRING)
        FUNCTION LoadFontEx& (filename AS STRING, size AS INTEGER, BYVAL chars AS INTEGER, BYVAL count AS INTEGER)
        FUNCTION LoadFontFromImage& (BYVAL Image AS _OFFSET, BYVAL rColor AS _UNSIGNED LONG, BYVAL first AS INTEGER)
        FUNCTION LoadFontData (filename AS STRING, size AS INTEGER, BYVAL chars AS INTEGER, BYVAL count AS INTEGER, BYVAL xtype AS INTEGER)
        FUNCTION GenImageFontAtlas& (BYVAL chars AS _OFFSET, BYVAL count AS INTEGER, BYVAL size AS INTEGER, BYVAL pad AS INTEGER, BYVAL pack AS INTEGER)
        SUB UnloadFont (BYVAL Font AS _OFFSET)
        'Text Drawing Function
        SUB DrawFPS (BYVAL x AS INTEGER, BYVAL y AS INTEGER)
        SUB DrawText (text AS STRING, BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL size AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawTextEx (BYVAL Font AS _OFFSET, text AS STRING, BYVAL Vector2 AS _FLOAT, BYVAL size AS _FLOAT, BYVAL space AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawTextRec (BYVAL Font AS _OFFSET, text AS STRING, BYVAL Rect AS _FLOAT, size AS _FLOAT, BYVAL space AS _FLOAT, BYVAL wrap AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawTextRecEx (BYVAL Font AS _OFFSET, text AS STRING, BYVAL Rect AS _FLOAT, BYVAL size AS _FLOAT, BYVAL space AS _FLOAT, BYVAL wrap AS INTEGER, BYVAL rColor AS _UNSIGNED LONG, BYVAL sel AS INTEGER, BYVAL xlen AS INTEGER, BYVAL rColor AS _UNSIGNED LONG, BYVAL rColor AS _UNSIGNED LONG)
        'Text Misc Function
        FUNCTION MeasureText& (text AS STRING, BYVAL size AS INTEGER)
        FUNCTION MeasureTextEx& (BYVAL Font AS _OFFSET, text AS STRING, BYVAL size AS _FLOAT, BYVAL space AS _FLOAT)
        FUNCTION GetGlyphIndex& (BYVAL Font AS _OFFSET, BYVAL c AS INTEGER)
        FUNCTION GetNextCodepoint& (text AS STRING, BYVAL count AS INTEGER)
        'Text String Manipulation Function
        FUNCTION TextIsEqual& (text AS STRING, text2 AS STRING)
        FUNCTION TextLength& (text AS STRING)
        FUNCTION TextCountCodepoints& (text AS STRING)
        FUNCTION TextFormat& (text AS STRING)
        FUNCTION TextSubtext& (text AS STRING, BYVAL position AS INTEGER, BYVAL xlen AS INTEGER)
        FUNCTION TextReplace& (text AS STRING, rep AS STRING, by AS STRING)
        FUNCTION TextInsert& (text AS STRING, ins AS STRING, BYVAL position AS INTEGER)
        FUNCTION TextJoin& (text AS STRING, BYVAL count AS INTEGER, del AS STRING)
        FUNCTION TextSplit& (text AS STRING, del AS STRING, BYVAL count AS INTEGER)
        SUB TextAppend (text AS STRING, app AS STRING, BYVAL position AS INTEGER)
        FUNCTION TextFindIndex& (text AS STRING, fi AS STRING)
        FUNCTION TextToUpper& (text AS STRING)
        FUNCTION TextToLower& (text AS STRING)
        FUNCTION TextToPascal& (text AS STRING)
        FUNCTION TextToInteger& (text AS STRING)
        'Basic 3D Shape Function
        SUB DrawLine3D (BYVAL Vector3 AS _FLOAT, BYVAL Vector3 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCircle3D (BYVAL Vector3 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL Vector3 AS _FLOAT, BYVAL rot AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCube (BYVAL Vector3 AS _FLOAT, BYVAL w AS _FLOAT, BYVAL h AS _FLOAT, BYVAL len AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCubeV (BYVAL Vector3 AS _FLOAT, BYVAL Vector3 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCubeWires (BYVAL Vector3 AS _FLOAT, BYVAL w AS _FLOAT, BYVAL h AS _FLOAT, BYVAL len AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCubeWiresV (BYVAL Vector3 AS _FLOAT, BYVAL Vector3 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCubeTexture (BYVAL Texture2D AS _OFFSET, BYVAL Vector3 AS _FLOAT, BYVAL w AS _FLOAT, BYVAL h AS _FLOAT, BYVAL xlen AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawSphere (BYVAL Vector3 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawSphereEx (BYVAL Vector3 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL ring AS INTEGER, BYVAL slic AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawSphereWires (BYVAL Vector3 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL ring AS INTEGER, BYVAL slice AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCylinder (BYVAL Vector3 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL ring AS INTEGER, BYVAL slice AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawCylinderWires (BYVAL Vector3 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL rad2 AS _FLOAT, BYVAL h AS _FLOAT, BYVAL slic AS INTEGER, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawPlane (BYVAL Vector3 AS _FLOAT, BYVAL Vector2 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawGrid (BYVAL slice AS INTEGER, BYVAL space AS _FLOAT)
        SUB DrawGizmo (BYVAL Vector3 AS _FLOAT)
        '3D Model Loading Fuction
        FUNCTION LoadModel& (filename AS STRING)
        FUNCTION LoadModelFromMesh& (BYVAL Mesh AS _OFFSET)
        SUB UnloadModel (BYVAL Model AS _OFFSET)
        'Mesh Loading Function
        FUNCTION LoadMeshes& (filename AS STRING, BYVAL count AS INTEGER)
        SUB ExportMesh (BYVAL Mesh AS _OFFSET)
        SUB UnloadMesh (BYVAL Mesh AS _OFFSET)
        'Material Loading Function
        FUNCTION LoadMaterials& (filename AS STRING, BYVAL count AS INTEGER)
        FUNCTION LoadMaterialDefault& ()
        SUB UnloadMaterial (BYVAL Material AS _OFFSET)
        SUB SetMaterialTexture (BYVAL Material AS _OFFSET, BYVAL map AS INTEGER, BYVAL Texture2D AS _OFFSET)
        SUB SetModelMeshMaterial (BYVAL Model AS _OFFSET, BYVAL id AS INTEGER, BYVAL id2 AS INTEGER)
        'Model Animation Loading Function
        FUNCTION LoadModelAnimations& (filename AS STRING, BYVAL count AS INTEGER)
        SUB UpdateModelAnimation (BYVAL Model AS _OFFSET, BYVAL ModelAnimation AS _OFFSET, BYVAL frame AS INTEGER)
        SUB UnloadModelAnimation (BYVAL ModelAnimation AS _OFFSET)
        FUNCTION IsModelAnimationValid& (BYVAL Model AS _OFFSET, BYVAL ModelAnimation AS _OFFSET)
        'Mesh Generation Function
        FUNCTION GenMeshPoly& (BYVAL sides AS INTEGER, BYVAL rad AS _FLOAT)
        FUNCTION GenMeshPlane& (BYVAL w AS _FLOAT, BYVAL xlen AS _FLOAT, BYVAL x AS INTEGER, BYVAL z AS INTEGER)
        FUNCTION GenMeshCube& (BYVAL w AS _FLOAT, BYVAL h AS _FLOAT, BYVAL xlen AS _FLOAT)
        FUNCTION GenMeshSphere& (BYVAL rad AS _FLOAT, BYVAL ring AS INTEGER, BYVAL slice AS INTEGER)
        FUNCTION GenMeshHemiSphere& (BYVAL rad AS _FLOAT, BYVAL ring AS INTEGER, BYVAL slice AS INTEGER)
        FUNCTION GenMeshCylinder& (BYVAL rad AS _FLOAT, BYVAL h AS _FLOAT, BYVAL slice AS INTEGER)
        FUNCTION GenMeshTorus& (BYVAL rad AS _FLOAT, BYVAL size AS _FLOAT, BYVAL segs AS INTEGER, BYVAL sides AS INTEGER)
        FUNCTION GenMeshKnot& (BYVAL rad AS _FLOAT, BYVAL size AS _FLOAT, BYVAL segs AS INTEGER, BYVAL sides AS INTEGER)
        FUNCTION GenMeshHeightmap& (BYVAL Image AS _OFFSET, BYVAL Vector3 AS _FLOAT)
        FUNCTION GenMeshCubicmap& (BYVAL Image AS _OFFSET, BYVAL Vector3 AS _FLOAT)
        'Mesh manipulation Function
        FUNCTION MeshBoundingBox& (BYVAL Mesh AS _OFFSET)
        SUB MeshTangents (BYVAL Mesh AS _OFFSET)
        SUB MeshBinormals (BYVAL Mesh AS _OFFSET)
        'Model Drawing Function
        SUB DrawModel (BYVAL Model AS _OFFSET, BYVAL Vector3 AS _FLOAT, BYVAL scale AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawModelEx (BYVAL Model AS _OFFSET, BYVAL Vector3 AS _FLOAT, BYVAL Vector3 AS _FLOAT, BYVAL rot AS _FLOAT, BYVAL Vector3 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawModelWires (BYVAL Model AS _OFFSET, BYVAL Vector3 AS _FLOAT, BYVAL scale AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawModelWiresEx (BYVAL Model AS _OFFSET, BYVAL Vector3 AS _FLOAT, BYVAL Vector3 AS _FLOAT, BYVAL rot AS _FLOAT, BYVAL Vector3 AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawBoundingBox (BYVAL BoundingBox AS _OFFSET, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawBillboard (BYVAL Camera AS _OFFSET, BYVAL Texture2D AS _OFFSET, BYVAL Vector3 AS _FLOAT, BYVAL size AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        SUB DrawBillboardRec (BYVAL Camera AS _OFFSET, BYVAL Texture2D AS _OFFSET, BYVAL Rect AS _FLOAT, BYVAL Vector3 AS _FLOAT, BYVAL size AS _FLOAT, BYVAL rColor AS _UNSIGNED LONG)
        'Collision Detection Function
        FUNCTION CheckCollisionSpheres& (BYVAL Vector3 AS _FLOAT, BYVAL radA AS _FLOAT, BYVAL centB AS _FLOAT, BYVAL radB AS _FLOAT)
        FUNCTION CheckCollisionBoxes& (BYVAL BoundingBox AS _OFFSET, BYVAL BoundingBox AS _OFFSET)
        FUNCTION CheckCollisionBoxSphere& (BYVAL bb AS _OFFSET, BYVAL Vector3 AS _FLOAT, BYVAL rad AS _FLOAT)
        FUNCTION CheckCollisionRaySphere& (BYVAL ray AS _OFFSET, BYVAL Vector3 AS _FLOAT, BYVAL rad AS _FLOAT)
        'FUNCTION CheckCollisionSphereEx& (BYVAL ray AS _OFFSET, BYVAL Vector3 AS _FLOAT, BYVAL rad AS _FLOAT, BYVAL Vector3 AS _FLOAT)
        FUNCTION CheckCollisionRayBox& (BYVAL ray AS _OFFSET, BYVAL bb AS _OFFSET)
        FUNCTION GetCollisionRayModel& (BYVAL ray AS _OFFSET, BYVAL Model AS _OFFSET)
        FUNCTION GetCollisionRayTriangle& (BYVAL ray AS _OFFSET, BYVAL Vector3 AS _FLOAT, BYVAL Vector3 AS _FLOAT, BYVAL Vector3 AS _FLOAT)
        FUNCTION GetCollisionRayGround& (BYVAL ray AS _OFFSET, BYVAL gh AS _FLOAT)
        'Shader Loading Function
        FUNCTION LoadText& (filename AS STRING)
        FUNCTION LoadShader& (filename AS STRING, fs AS STRING)
        FUNCTION LoadShaderCode& (vs AS STRING, fs AS STRING)
        SUB UnloadShader (BYVAL Shader AS _OFFSET)
        FUNCTION GetShaderDefault& ()
        FUNCTION GetTextureDefault& ()
        'Shader Config Function
        FUNCTION GetShaderLocation& (BYVAL Shader AS _OFFSET, uni AS STRING)
        SUB SetShaderValue (BYVAL Shader AS _OFFSET, BYVAL uni AS INTEGER, BYVAL xval AS _OFFSET, BYVAL uni2 AS INTEGER)
        SUB SetShaderValueV (BYVAL Shader AS _OFFSET, BYVAL uni AS INTEGER, BYVAL xval AS _OFFSET, BYVAL uni2 AS INTEGER, BYVAL count AS INTEGER)
        SUB SetShaderValueMatrix (BYVAL Shader AS _OFFSET, BYVAL uni AS INTEGER, BYVAL Matrix AS _OFFSET)
        SUB SetShaderValueTexture (BYVAL Shader AS _OFFSET, BYVAL uni AS INTEGER, BYVAL Texture2D AS _OFFSET)
        SUB SetMatrixProjection (BYVAL Matrix AS _OFFSET)
        SUB SetMatrixModelview (BYVAL Matrix AS _OFFSET)
        FUNCTION GetMatrixModelview& ()
        'Texture map generation (shaders should be provided)
        FUNCTION GenTextureCubemap& (BYVAL Shader AS _OFFSET, BYVAL Texture2D AS _OFFSET, BYVAL size AS INTEGER)
        FUNCTION GenTextureIrradiance& (BYVAL Shader AS _OFFSET, BYVAL Texture2D AS _OFFSET, BYVAL size AS INTEGER)
        FUNCTION GenTexturePrefilter& (BYVAL Shader AS _OFFSET, BYVAL Texture2D AS _OFFSET, BYVAL size AS INTEGER)
        FUNCTION GenTextureBRDF (BYVAL Shader AS _OFFSET, BYVAL size AS INTEGER)
        'Shader begin/end Function
        SUB BeginShaderMode (BYVAL Shader AS _OFFSET)
        SUB EndShaderMode ()
        SUB BeginBlendMode (BYVAL mode AS INTEGER)
        SUB EndBlendMode ()
        SUB BeginScissorMode (BYVAL x AS INTEGER, BYVAL y AS INTEGER, BYVAL w AS INTEGER, BYVAL h AS INTEGER)
        SUB EndScissorMode ()
        'VR Function
        SUB InitVrSimulator ()
        SUB CloseVrSimulator ()
        SUB UpdateVrTracking (BYVAL Camera AS _OFFSET)
        SUB SetVrConfiguration (BYVAL VrDeviceInfo AS _OFFSET, BYVAL Shader AS _OFFSET)
        FUNCTION IsVrSimulatorReady& ()
        SUB ToggleVrMode ()
        SUB BeginVrDrawing ()
        SUB EndVrDrawing ()
        'Audio Loading/Playing Function
        SUB InitAudioDevice ()
        SUB CloseAudioDevice ()
        FUNCTION IsAudioDeviceReady& ()
        SUB SetMasterVolume (BYVAL vol AS _FLOAT)
        'Wave Loading Function
        FUNCTION LoadWave& (filename AS STRING)
        FUNCTION LoadWaveEx& (BYVAL dat AS _OFFSET, BYVAL samp AS INTEGER, BYVAL rate AS INTEGER, BYVAL size AS INTEGER, BYVAL chan AS INTEGER)
        FUNCTION LoadSound& (filename AS STRING)
        FUNCTION LoadSoundFromWave& (BYVAL Wave AS _OFFSET)
        SUB UpdateSound (BYVAL Sound AS _OFFSET, BYVAL dat AS _OFFSET, BYVAL count AS INTEGER)
        SUB UnloadWave (BYVAL Wave AS _OFFSET)
        SUB UnloadSound (BYVAL Sound AS _OFFSET)
        SUB ExportWave (BYVAL Wave AS _OFFSET, filename AS STRING)
        SUB ExportWaveAsCode (BYVAL Wave AS _OFFSET, filename AS STRING)
        'Wave Sound management Function
        SUB PlaySound (BYVAL Sound AS _OFFSET)
        'SUB PlaySoundMulti (BYVAL Sound AS _OFFSET)
        'FUNCTION GetSoundsPlaying& ()
        'SUB PauseSound (BYVAL Sound AS _OFFSET)
        'SUB ResumeSound (BYVAL Sound AS _OFFSET)
        'SUB StopSound (BYVAL Sound AS _OFFSET)
        'SUB StopSoundMulti ()
        'FUNCTION IsSoundPlaying& (BYVAL Sound AS _OFFSET)
        'SUB SetSoundVolume (BYVAL Sound AS _OFFSET, BYVAL vol AS _FLOAT)
        'SUB SetSoundPitch (BYVAL Sound AS _OFFSET, BYVAL pit AS _FLOAT)
        'SUB WaveFormat (BYVAL Wave AS _OFFSET, BYVAL rate AS INTEGER, BYVAL size AS INTEGER, BYVAL chan AS INTEGER)
        'FUNCTION WaveCopy& (BYVAL Wave AS _OFFSET)
        'UB WaveCrop (BYVAL Wave AS _OFFSET, BYVAL samp AS INTEGER, BYVAL fin AS INTEGER)
        'FUNCTION GetWaveData& (BYVAL Wave AS _OFFSET)
        'Music Management Function
        'FUNCTION LoadMusicStream& (filename AS STRING)
        'SUB UnloadMusicStream (BYVAL Music AS _OFFSET)
        'SUB PlayMusicStream (BYVAL Music AS _OFFSET)
        'SUB UpdateMusicStream (BYVAL Music AS _OFFSET)
        'SUB StopMusicStream (BYVAL Music AS _OFFSET)
        'SUB PauseMusicStream (BYVAL Music AS _OFFSET)
        'SUB ResumeMusicStream (BYVAL Music AS _OFFSET)
        'FUNCTION IsMusicPlaying& (BYVAL Music AS _OFFSET)
        'SUB SetMusicVolume (BYVAL Music AS _OFFSET, BYVAL vol AS _FLOAT)
        'SUB SetMusicPitch (BYVAL Music AS _OFFSET, BYVAL pit AS _FLOAT)
        'SUB SetMusicLoopCount (BYVAL Music AS _OFFSET, BYVAL count AS INTEGER)
        'FUNCTION GetMusicTimeLength& (BYVAL Music AS _OFFSET)
        'FUNCTION GetMusicTimePlayed& (BYVAL Music AS _OFFSET)
        'AudioStream Function
        'FUNCTION InitAudioStream& (BYVAL rate AS _UNSIGNED INTEGER, BYVAL size AS _UNSIGNED INTEGER, BYVAL chan AS _UNSIGNED INTEGER)
        'SUB UpdateAudioStream (BYVAL AudioStream AS _OFFSET, BYVAL dat AS _OFFSET, BYVAL count AS INTEGER)
        'SUB CloseAudioStream (BYVAL AudioStream AS _OFFSET)
        'FUNCTION IsAudioBufferProcessed& (BYVAL AudioStream AS _OFFSET)
        'SUB PlayAudioStream (BYVAL AudioStream AS _OFFSET)
        'SUB PauseAudioStream (BYVAL AudioStream AS _OFFSET)
        'SUB ResumeAudioStream (BYVAL AudioStream AS _OFFSET)
        'FUNCTION IsAudioStreamPlaying& (BYVAL AudioStream AS _OFFSET)
        'SUB StopAudioStream (BYVAL AudioStream AS _OFFSET)
        'SUB SetAudioStreamVolume (BYVAL AudioStream AS _OFFSET, BYVAL vol AS _FLOAT)
        'SUB SetAudioStreamPitch (BYVAL AudioStream AS _OFFSET, BYVAL pit AS _FLOAT)
    END DECLARE
$END IF
